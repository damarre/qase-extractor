import { BaseGetAllParams, RunCreate, RunCreated, RunFilters, RunInfo, RunList } from '../models';
import { AxiosResponse } from 'axios';
import { BaseService } from '.';
interface RunsGetAllParams extends BaseGetAllParams {
    filters?: RunFilters;
    include?: 'cases';
}
export declare class Runs extends BaseService {
    getAll(code: string, { limit, offset, filters, include }: RunsGetAllParams): Promise<AxiosResponse<RunList>>;
    get(code: string, runId: string | number): Promise<AxiosResponse<RunInfo>>;
    exists(code: string, runId: string | number): Promise<boolean>;
    complete(code: string, runId: string | number): Promise<AxiosResponse<undefined>>;
    create(code: string, data: RunCreate): Promise<AxiosResponse<RunCreated>>;
    delete(code: string, runId: string | number): Promise<AxiosResponse<undefined>>;
}
export {};
