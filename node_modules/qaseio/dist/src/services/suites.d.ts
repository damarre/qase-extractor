import { BaseGetAllParams, SuiteCreate, SuiteCreated, SuiteFilters, SuiteInfo, SuiteList, SuiteUpdate } from '../models';
import { AxiosResponse } from 'axios';
import { BaseService } from '.';
interface SuitesGetAllParams extends BaseGetAllParams {
    filters?: SuiteFilters;
}
export declare class Suites extends BaseService {
    getAll(code: string, { limit, offset, filters }: SuitesGetAllParams): Promise<AxiosResponse<SuiteList>>;
    get(code: string, suiteId: string | number): Promise<AxiosResponse<SuiteInfo>>;
    exists(code: string, suiteId: string | number): Promise<boolean>;
    create(code: string, data: SuiteCreate): Promise<AxiosResponse<SuiteCreated>>;
    update(code: string, suiteId: string | number, data: SuiteUpdate): Promise<AxiosResponse<SuiteCreated>>;
    delete(code: string, suiteId: string | number): Promise<AxiosResponse<undefined>>;
}
export {};
