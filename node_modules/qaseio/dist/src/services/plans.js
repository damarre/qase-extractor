"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plans = void 0;
var _1 = require(".");
var Plans = /** @class */ (function (_super) {
    __extends(Plans, _super);
    function Plans() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Plans.prototype.getAll = function (code, _a) {
        var limit = _a.limit, offset = _a.offset;
        return this.api
            .get("/plan/" + code, { params: { limit: limit, offset: offset } })
            .then(this.validateResponse());
    };
    Plans.prototype.get = function (code, planId) {
        return this.api
            .get("/plan/" + code + "/" + planId)
            .then(this.validateResponse());
    };
    Plans.prototype.exists = function (code, planId) {
        return this.get(code, planId)
            .then(function (resp) { return Boolean(resp.data.id); })
            .catch(function () { return false; });
    };
    Plans.prototype.create = function (code, data) {
        return this.api
            .post("/plan/" + code, data)
            .then(this.validateResponse());
    };
    Plans.prototype.update = function (code, planId, data) {
        return this.api
            .patch("/plan/" + code + "/" + planId, data)
            .then(this.validateResponse());
    };
    Plans.prototype.delete = function (code, planId) {
        return this.api
            .delete("/plan/" + code + "/" + planId)
            .then(this.validateResponse());
    };
    return Plans;
}(_1.BaseService));
exports.Plans = Plans;
//# sourceMappingURL=plans.js.map