import { BaseGetAllParams, ResultCreate, ResultCreated, ResultFilters, ResultInfo, ResultList, ResultUpdate } from '../models';
import { AxiosResponse } from 'axios';
import { BaseService } from '.';
interface ResultsGetAllParams extends BaseGetAllParams {
    filters?: ResultFilters;
}
export declare class Results extends BaseService {
    getAll(code: string, { limit, offset, filters }: ResultsGetAllParams): Promise<AxiosResponse<ResultList>>;
    get(code: string, hash: string): Promise<AxiosResponse<ResultInfo>>;
    exists(code: string, hash: string): Promise<boolean>;
    create(code: string, runId: string | number, data: ResultCreate): Promise<AxiosResponse<ResultCreated>>;
    update(code: string, runId: string | number, hash: string, data: ResultUpdate): Promise<AxiosResponse<ResultCreated>>;
    delete(code: string, runId: string | number, hash: string): Promise<AxiosResponse<undefined>>;
}
export {};
