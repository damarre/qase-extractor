import { BaseGetAllParams, MilestoneCreate, MilestoneCreated, MilestoneFilters, MilestoneInfo, MilestoneList, MilestoneUpdate } from '../models';
import { AxiosResponse } from 'axios';
import { BaseService } from '.';
interface MilestonesGetAllParams extends BaseGetAllParams {
    filters?: MilestoneFilters;
}
export declare class Milestones extends BaseService {
    getAll(code: string, { limit, offset, filters }: MilestonesGetAllParams): Promise<AxiosResponse<MilestoneList>>;
    get(code: string, milestoneId: string | number): Promise<AxiosResponse<MilestoneInfo>>;
    exists(code: string, milestoneId: string | number): Promise<boolean>;
    create(code: string, data: MilestoneCreate): Promise<AxiosResponse<MilestoneCreated>>;
    update(code: string, milestoneId: string | number, data: MilestoneUpdate): Promise<AxiosResponse<MilestoneCreated>>;
    delete(code: string, milestoneId: string | number): Promise<AxiosResponse<undefined>>;
}
export {};
