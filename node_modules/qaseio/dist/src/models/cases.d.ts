import { Automation, BaseList, Behavior, Priority, Severity, Type } from './base';
export declare enum TestCaseStatus {
    ACTUAL = "actual",
    DRAFT = "draft",
    DEPRECATED = "deprecated"
}
export declare class TestCaseFilters {
    filter: {
        search?: string;
        milestone_id?: number;
        suite_id?: number;
        severity?: Severity[];
        priority?: Priority[];
        type?: Type[];
        behavior?: Behavior[];
        automation?: Automation[];
        status?: TestCaseStatus[];
    };
    constructor(filter: {
        search?: string;
        milestone_id?: number;
        suite_id?: number;
        severity?: Severity[];
        priority?: Priority[];
        type?: Type[];
        behavior?: Behavior[];
        automation?: Automation[];
        status?: TestCaseStatus[];
    });
}
export interface TestCaseInfo {
    id: any;
    position: any;
    title: any;
    description: any;
    preconditions: any;
    postconditions: any;
    severity: any;
    priority: any;
    type: any;
    behavior: any;
    automation: any;
    status: any;
    milestone_id: any;
    suite_id: any;
    tags: any[];
    links: any[];
    revision: any;
    custom_fields: any[];
    attachments: any[];
    steps: any[];
    created: any;
    updated: any;
}
export interface TestCaseList extends BaseList {
    entities: TestCaseInfo[];
}
