import { BaseList } from './base';
export declare enum RunStatus {
    ACTIVE = "active",
    COMPLETE = "complete",
    ABORT = "abort"
}
export declare class RunFilters {
    filter: {
        status?: RunStatus[];
    };
    constructor(filter: {
        status?: RunStatus[];
    });
}
export declare class RunCreate {
    title: string;
    cases: number[] | null;
    description?: string;
    environment_id?: number;
    constructor(title: string, cases?: number[] | null, args?: {
        description?: string;
        environment_id?: number;
    });
}
export interface RunCreated {
    id: number;
}
export interface RunInfoStats {
    total: any;
    untested: any;
    passed: any;
    failed: any;
    blocked: any;
    skipped: any;
    retest: any;
    deleted: any;
}
export interface RunInfo {
    id: any;
    title: any;
    description: any;
    status: any;
    start_time: any;
    end_time: any;
    public: any;
    stats: RunInfoStats;
    time_spent: any;
    user_id: any;
    environment: any;
    cases: any[];
}
export interface RunList extends BaseList {
    entities: RunInfo[];
}
