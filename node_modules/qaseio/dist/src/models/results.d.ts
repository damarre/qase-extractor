import { BaseList } from './base';
export declare enum ResultStatus {
    IN_PROGRESS = "in_progress",
    PASSED = "passed",
    FAILED = "failed",
    SKIPPED = "skipped",
    BLOCKED = "blocked"
}
export declare class ResultFilters {
    filter: {
        status?: ResultStatus[];
        member?: number;
        run?: number;
        case_id?: number;
        from_end_time?: string;
        to_end_time?: string;
    };
    constructor(filter: {
        status?: ResultStatus[];
        member?: number;
        run?: number;
        case_id?: number;
        from_end_time?: string;
        to_end_time?: string;
    });
}
export declare class ResultStepCreate {
    position: number;
    status: ResultStatus;
    attachments: string[];
    comment?: string | undefined;
    constructor(position: number, status: ResultStatus, attachments?: string[], comment?: string | undefined);
}
export declare class ResultCreate {
    case_id: number;
    status: ResultStatus;
    time?: number;
    member_id?: number;
    comment?: string;
    stacktrace?: string;
    defect?: boolean;
    steps?: ResultStepCreate[];
    attachments?: string[];
    constructor(case_id: number, status: ResultStatus, args?: {
        time?: number;
        member_id?: number;
        comment?: string;
        stacktrace?: string;
        defect?: boolean;
        steps?: ResultStepCreate[];
        attachments?: string[];
    });
}
export declare class ResultUpdate {
    status?: ResultStatus;
    time?: number;
    comment?: string;
    stacktrace?: string;
    defect?: boolean;
    steps?: ResultStepCreate[];
    attachments?: string[];
    constructor(args?: {
        status?: ResultStatus;
        time?: number;
        comment?: string;
        stacktrace?: string;
        defect?: boolean;
        steps?: ResultStepCreate[];
        attachments?: string[];
    });
}
export interface ResultCreated {
    hash: string;
}
export interface ResultInfo {
    hash: any;
    comment: any;
    stacktrace: any;
    run_id: any;
    case_id: any;
    steps: any[];
    status: any;
    is_api_result: any;
    time_spent: any;
    end_time: any;
    attachments: any[];
}
export interface ResultList extends BaseList {
    entities: ResultInfo[];
}
