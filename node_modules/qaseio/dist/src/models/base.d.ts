export declare enum AccessLevel {
    ALL = "all",
    GROUP = "group",
    NONE = "none"
}
export declare enum Severity {
    UNDEFINED = "undefined",
    BLOCKER = "blocker",
    CRITICAL = "critical",
    MAJOR = "major",
    NORMAL = "normal",
    MINOR = "minor",
    TRIVIAL = "trivial"
}
export declare enum Priority {
    UNDEFINED = "undefined",
    HIGH = "high",
    MEDIUM = "medium",
    LOW = "low"
}
export declare enum Type {
    OTHER = "other",
    FUNCTIONAL = "functional",
    SMOKE = "smoke",
    REGRESSION = "regression",
    SECURITY = "security",
    USABILITY = "usability",
    PERFORMANCE = "performance",
    ACCEPTANCE = "acceptance"
}
export declare enum Behavior {
    UNDEFINED = "undefined",
    POSITIVE = "positive",
    NEGATIVE = "negative",
    DESTRUCTIVE = "destructive"
}
export declare enum Automation {
    IS_NOT_AUTOMATED = "is-not-automated",
    AUTOMATED = "automated",
    TO_BE_AUTOMATED = "to-be-automated"
}
export interface BaseGetAllParams {
    limit?: number;
    offset?: number;
}
export interface BaseList {
    total?: number;
    filtered?: number;
    count?: number;
}
export declare class Filter {
    private filters?;
    constructor(filters?: Record<string, any> | undefined);
    filter(): Record<string, string>;
}
